name: Agent Trigger (Direct Execution)

"on":
  repository_dispatch:
    # Direct agent triggers for immediate execution
    types: [agent_autopost, agent_analyze]
  workflow_dispatch:
    inputs:
      action:
        description: "run | analyze"
        required: false
        default: "run"
      dry_run:
        description: "true = do everything except post to X"
        required: false
        default: "false"

permissions:
  contents: write

concurrency:
  group: agent-trigger
  cancel-in-progress: false

env:
  CLIP_DURATION_SEC: "20"
  TEASER_DURATION_SEC: "180"
  NUM_CLIPS: "3"
  SCENE_THRESHOLD: "0.4"

jobs:
  execute:
    runs-on: ubuntu-latest
    name: Direct AutoPost Execution
    steps:
      - name: Determine execution mode
        id: config
        run: |
          set -euo pipefail
          # Map repository_dispatch events and workflow_dispatch inputs to mode
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            case "${{ github.event.action }}" in
              "agent_autopost")
                MODE="run"
                DRY="${{ github.event.client_payload.dry_run || 'false' }}"
                ;;
              "agent_analyze")
                MODE="analyze"
                DRY="${{ github.event.client_payload.dry_run || 'false' }}"
                ;;
              *)
                MODE="run"
                DRY="false"
                ;;
            esac
          else
            # Handle workflow_dispatch
            MODE="${{ github.event.inputs.action || 'run' }}"
            DRY="${{ github.event.inputs.dry_run || 'false' }}"
          fi

          echo "mode=$MODE" >> $GITHUB_OUTPUT
          echo "dry_run=$DRY" >> $GITHUB_OUTPUT
          echo "Executing mode=$MODE dry_run=$DRY (UTC now $(date -u))"

      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      - name: Install ffmpeg
        if: steps.config.outputs.mode == 'run'
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Build
        run: mvn -q -DskipTests package

      - name: Write service account file
        if: steps.config.outputs.mode == 'run'
        run: |
          printf '%s' "$GOOGLE_SERVICE_ACCOUNT_JSON" > sa.json
        env:
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}

      - name: Execute AutoPost
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/sa.json
          RAW_FOLDER_ID: ${{ secrets.RAW_FOLDER_ID || secrets.GOOGLE_RAW_FOLDER_ID }}
          EDITS_FOLDER_ID: ${{ secrets.EDITS_FOLDER_ID || secrets.GOOGLE_EDITS_FOLDER_ID }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          X_API_KEY: ${{ secrets.X_API_KEY }}
          X_API_SECRET: ${{ secrets.X_API_SECRET }}
          X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
          X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
          CLIP_DURATION_SEC: ${{ env.CLIP_DURATION_SEC }}
          TEASER_DURATION_SEC: ${{ env.TEASER_DURATION_SEC }}
          NUM_CLIPS: ${{ env.NUM_CLIPS }}
          SCENE_THRESHOLD: ${{ env.SCENE_THRESHOLD }}
          DRY_RUN: ${{ steps.config.outputs.dry_run }}
        run: |
          set -euo pipefail
          MODE="${{ steps.config.outputs.mode }}"
          if [ "${DRY_RUN}" = "true" ] && [ "$MODE" = "run" ]; then
            echo "DRY RUN: Application should avoid posting."
          fi
          java -jar target/autopost.jar "$MODE"

      - name: Cleanup
        if: steps.config.outputs.mode == 'run'
        run: rm -f sa.json

      - name: Commit updated analysis artifacts
        if: steps.config.outputs.mode == 'analyze'
        run: |
          set -euo pipefail
          git config user.name "autopost-bot"
          git config user.email "autopost-bot@users.noreply.github.com"
          for f in best_slots.json analysis.md; do
            [ -f "$f" ] && git add "$f"
          done
          if git diff --cached --quiet; then
            echo "No analysis changes to commit."
          else
            git commit -m "chore: update best posting slots (agent trigger)"
            git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true
            git push
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: agent-trigger-output
          path: |
            best_slots.json
            analysis.md
          if-no-files-found: ignore

      - name: Summary
        if: always()
        run: |
          {
            echo "### Agent Trigger Execution"
            echo "* Mode: ${{ steps.config.outputs.mode }}"
            echo "* Status: ${{ job.status }}"
            echo "* Dry run: ${{ steps.config.outputs.dry_run }}"
            echo "* Time (UTC): $(date -u)"
          } >> $GITHUB_STEP_SUMMARY
