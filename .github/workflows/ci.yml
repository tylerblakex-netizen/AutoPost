name: CI - Build, Test & Security

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  security-events: write

jobs:
  # Clean build job - no cache, full quality checks
  build-clean:
    name: Clean Build (Java ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [17, 21]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis
      
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          # No cache for clean build
      
      - name: Validate Maven Wrapper
        run: |
          # Verify wrapper exists and is executable
          test -x ./mvnw || (echo "Maven wrapper not executable" && exit 1)
          test -f .mvn/wrapper/maven-wrapper.properties || (echo "Wrapper properties missing" && exit 1)
      
      - name: Run security scan (Gitleaks)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }} # optional
        with:
          config-path: .gitleaks.toml
      
      - name: Enforce build reproducibility
        run: |
          echo "Building twice to verify reproducibility..."
          ./mvnw clean package -DskipTests -q
          mv target/autopost.jar target/autopost-build1.jar
          ./mvnw clean package -DskipTests -q
          mv target/autopost.jar target/autopost-build2.jar
          
          # Compare file sizes (should be identical for reproducible builds)
          SIZE1=$(stat -c%s target/autopost-build1.jar)
          SIZE2=$(stat -c%s target/autopost-build2.jar)
          
          echo "Build 1 size: $SIZE1 bytes"
          echo "Build 2 size: $SIZE2 bytes"
          
          if [ "$SIZE1" != "$SIZE2" ]; then
            echo "❌ Build not reproducible - sizes differ"
            exit 1
          else
            echo "✅ Build is reproducible"
          fi
      
      - name: Code quality checks
        run: |
          echo "Running code quality checks..."
          ./mvnw clean compile spotless:check spotbugs:check checkstyle:check -DskipTests
      
      - name: Run tests
        run: |
          echo "Running tests..."
          ./mvnw test
      
      - name: Verify final package
        run: |
          ./mvnw clean package -DskipTests
          echo "Verifying JAR structure..."
          jar -tf target/autopost.jar | head -20
          
          # Check JAR can be executed
          echo "Testing JAR execution..."
          java -jar target/autopost.jar --help || echo "JAR execution test completed"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.java == '17'  # Only upload for Java 17
        with:
          name: autopost-jar-clean
          path: target/autopost.jar
          retention-days: 7

  # Cached build job - with Maven cache, tests only for speed
  build-cached:
    name: Cached Build (Java ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [17, 21]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: maven
      
      - name: Fast build and test
        run: |
          echo "Running fast build with cache..."
          # Use fast profile to skip quality checks for speed
          ./mvnw clean test -Pfast -q
      
      - name: Build summary
        run: |
          echo "### Cached Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Java Version: ${{ matrix.java }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build Time: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "- Cache Used: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  # Summary job
  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build-clean, build-cached]
    if: always()
    
    steps:
      - name: Generate summary
        run: |
          echo "## AutoPost CI Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Clean Build | ${{ needs.build-clean.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Cached Build | ${{ needs.build-cached.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Time:** $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.build-clean.result }}" == "success" && "${{ needs.build-cached.result }}" == "success" ]]; then
            echo "✅ **All builds passed!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some builds failed. Check logs above.**" >> $GITHUB_STEP_SUMMARY
          fi
