name: CI (shellcheck + Gradle)

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      # Allow repositories with zero Gradle wrappers
      - name: Validate Gradle wrapper (tolerate missing)
        uses: gradle/actions/wrapper-validation@v3
        with:
          min-wrapper-count: 0
          allow-snapshots: false

      # Install tool Gradle so we can run `gradle` (no ./gradlew in repo)
      - name: Setup Gradle 8.10.1
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.10.1
          cache-read-only: false

      - name: Ensure scripts are executable
        run: |
          if [ -f .ci/shellcheck.sh ]; then chmod +x .ci/shellcheck.sh; fi

      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Shellcheck
        run: |
          bash .ci/shellcheck.sh

      # Run Gradle using the installed tool; be tolerant if extra tasks aren't present
      - name: Gradle build
        if: ${{ hashFiles('settings.gradle*', 'build.gradle*') != '' }}
        env:
          SERVICE_PUBLIC_ID: ${{ vars.SERVICE_PUBLIC_ID }}
          SERVICE_SECRET_KEY: ${{ secrets.SERVICE_SECRET_KEY }}
          GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx2g -XX:+UseG1GC'"
        run: |
          set -euo pipefail
          gradle --version

          TASKS=$(gradle -q tasks --all | sed 's/\r//')
          HAS_SPOTLESS=0
          HAS_JACOCO=0
          echo "$TASKS" | grep -qE '(^| )spotlessApply( |$)' && HAS_SPOTLESS=1 || true
          echo "$TASKS" | grep -qE '(^| )jacocoTestReport( |$)' && HAS_JACOCO=1 || true

          CMD=("gradle" "--stacktrace" "--no-daemon")
          if [ $HAS_SPOTLESS -eq 1 ]; then CMD+=("spotlessApply"); fi
          CMD+=("build")
          if [ $HAS_JACOCO -eq 1 ]; then CMD+=("jacocoTestReport"); fi

          echo "Running: ${CMD[*]}"
          "${CMD[@]}"
