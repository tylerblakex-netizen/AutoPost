name: CI — static checks → compile → build

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.warning.mode=summary"
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      X_API_KEY: ${{ secrets.X_API_KEY }}
      RAW_FOLDER_ID: ${{ secrets.RAW_FOLDER_ID }}
      EDITS_FOLDER_ID: ${{ secrets.EDITS_FOLDER_ID }}
      GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Notice (SERVICE_* no longer required)
        shell: bash
        env:
          SERVICE_PUBLIC_ID: ${{ vars.SERVICE_PUBLIC_ID }}
          SERVICE_SECRET_KEY: ${{ vars.SERVICE_SECRET_KEY }}
        run: |
          if [ -z "${SERVICE_PUBLIC_ID}" ] || [ -z "${SERVICE_SECRET_KEY}" ]; then
            echo "::notice title=Service credentials not set::Skipping any steps that need SERVICE_PUBLIC_ID / SERVICE_SECRET_KEY."
          else
            echo "Service credentials provided via repo Variables."
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # Failsafe: use setup-gradle@v4, allow transient cache failures to NOT kill the job
      - name: Set up Gradle 8.9 (non-blocking cache)
        uses: gradle/actions/setup-gradle@v4
        continue-on-error: true
        with:
          gradle-version: 8.9
          # Avoid cache writes on PRs (common outage point)
          cache-read-only: ${{ github.event_name == 'pull_request' }}
          # If outages persist, uncomment next line to fully disable cache:
          # cache-disabled: true

      - name: Validate Gradle can run
        run: gradle -v

      - name: Make CI scripts executable
        run: chmod +x .ci/*.sh 2>/dev/null || true

      # ------------------- Static / formatting -------------------
      - name: ShellCheck (optional)
        run: bash .ci/shellcheck.sh || true

      - name: Spotless (if present)
        run: |
          if gradle -q tasks --all | grep -q "spotlessApply"; then
            gradle --stacktrace spotlessApply
          else
            echo "spotlessApply not found — skipping"
          fi

      - name: Static checks (if present)
        run: |
          if gradle -q tasks --all | grep -q "staticChecks"; then
            gradle --stacktrace staticChecks || true
          else
            echo "staticChecks task not found — skipping"
          fi

      # ------------------- Compile first, upload logs -------------------
      - name: Compile sources (classes)
        id: compile
        run: |
          set -e
          gradle --stacktrace classes 2>&1 | tee compile.log

      - name: Upload compile log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: compile-log
          path: compile.log

      # ------------------- Full build only if compile passed -------------------
      - name: Build
        if: success()
        run: gradle --stacktrace build

      - name: JaCoCo report (if present)
        if: success()
        run: |
          if gradle -q tasks --all | grep -q "jacocoTestReport"; then
            gradle --stacktrace jacocoTestReport
          else
            echo "jacocoTestReport not found — skipping"
          fi
