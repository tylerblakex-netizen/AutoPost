name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  build_and_test:
    name: Build & Test (auto Maven/Gradle; verbose)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect build tool
        id: detect
        run: |
          set -e
          if [ -f "pom.xml" ]; then
            echo "tool=maven" >> "$GITHUB_OUTPUT"
          elif [ -f "build.gradle" ] || [ -f "build.gradle.kts" ]; then
            echo "tool=gradle" >> "$GITHUB_OUTPUT"
          else
            echo "❌ No pom.xml or build.gradle(.kts) found at repo root."
            exit 1
          fi
          echo "Detected tool: $(cat $GITHUB_OUTPUT)"
          echo "=== Repo root ==="
          pwd
          echo "=== Files ==="
          ls -la

      # Set up JDK 21 with the right cache AFTER detection
      - name: Set up JDK 21 (Maven)
        if: steps.detect.outputs.tool == 'maven'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Set up JDK 21 (Gradle)
        if: steps.detect.outputs.tool == 'gradle'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Gradle prep (ensure CLI/wrapper)
        if: steps.detect.outputs.tool == 'gradle'
        run: |
          set -e
          if [ -f "./gradlew" ]; then
            echo "Using Gradle wrapper."
            chmod +x ./gradlew
            ./gradlew --version
          else
            echo "No gradle wrapper found; installing Gradle CLI."
            sudo apt-get update -y
            sudo apt-get install -y gradle
            gradle --version
          fi
          echo "=== Show top of build file ==="
          head -n 120 build.gradle* || true

      - name: Gradle diagnostics (tasks + dependency tree)
        if: steps.detect.outputs.tool == 'gradle'
        run: |
          set -e
          if [ -f "./gradlew" ]; then
            ./gradlew --no-daemon tasks --all || true
            ./gradlew --no-daemon dependencies --configuration runtimeClasspath || true
          else
            gradle --no-daemon tasks --all || true
            gradle --no-daemon dependencies --configuration runtimeClasspath || true
          fi

      - name: Build (Maven)
        if: steps.detect.outputs.tool == 'maven'
        run: |
          mvn -B -ntp -Dstyle.color=always -e -X test
          mvn -B -ntp -Dstyle.color=always -DskipTests package

      - name: Build (Gradle) — full logs
        if: steps.detect.outputs.tool == 'gradle'
        run: |
          set -e
          if [ -f "./gradlew" ]; then
            ./gradlew --no-daemon --stacktrace --info test
            ./gradlew --no-daemon --stacktrace --info assemble
          else
            gradle --no-daemon --stacktrace --info test
            gradle --no-daemon --stacktrace --info assemble
          fi

      - name: Upload test reports (if present)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/reports/tests/**
            **/build/test-results/**
            **/target/surefire-reports/**
            **/target/site/**
          if-no-files-found: ignore
