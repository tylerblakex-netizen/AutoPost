name: CI

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
      # Safer JVM settings; no weird --args misuse
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Build + Test
        run: ./gradlew --no-daemon clean test

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports/tests

  integration_smoke:
    # Run only if ALL required secrets exist (JSON + both folder IDs)
    if: ${{ secrets.GDRIVE_SERVICE_ACCOUNT_JSON != '' && secrets.GDRIVE_PARENT_ID_RAW != '' && secrets.GDRIVE_PARENT_ID_EDITS != '' }}
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"
      # Read IDs **from secrets** only
      GDRIVE_PARENT_ID_RAW: ${{ secrets.GDRIVE_PARENT_ID_RAW }}
      GDRIVE_PARENT_ID_EDITS: ${{ secrets.GDRIVE_PARENT_ID_EDITS }}
      AUTOMATION_DRY_RUN: 1
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Generate synthetic video (2s)
        run: >
          ffmpeg -f lavfi -i smptebars=s=1280x720:d=2
          -f lavfi -i sine=f=1000:duration=2
          -shortest -c:v libx264 -pix_fmt yuv420p -c:a aac /tmp/synth.mp4

      - name: Write service account JSON (secret → temp file)
        run: |
          sa_file="$(mktemp /tmp/gdrive-sa.XXXXXX.json)"
          printf '%s' "${{ secrets.GDRIVE_SERVICE_ACCOUNT_JSON }}" > "$sa_file"
          echo "GDRIVE_SERVICE_ACCOUNT_FILE=$sa_file" >> $GITHUB_ENV

      - name: Preflight (don’t print values)
        run: |
          [ -n "$GDRIVE_PARENT_ID_RAW" ] && echo "RAW ID present" || (echo "RAW ID missing"; exit 1)
          [ -n "$GDRIVE_PARENT_ID_EDITS" ] && echo "EDITS ID present" || (echo "EDITS ID missing"; exit 1)
          [ -f "$GDRIVE_SERVICE_ACCOUNT_FILE" ] && echo "SA file present" || (echo "SA file missing"; exit 1)

      # If you don't have an integrationTest task yet, change to a safe command or add the task.
      - name: Run integration smoke
        run: ./gradlew --no-daemon test

      - name: Upload smoke logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-logs
          path: |
            build/logs
            build/reports/tests
