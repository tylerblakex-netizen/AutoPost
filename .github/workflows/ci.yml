name: CI
on:
  push: { branches: [ main ] }
  pull_request:

permissions: { contents: read }

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    name: Build & Test (Gradle or Maven)

    steps:
      - uses: actions/checkout@v4

      - name: Detect build tool
        id: detect
        run: |
          if [ -f "pom.xml" ]; then
            echo "tool=maven" >> "$GITHUB_OUTPUT"
          elif [ -f "build.gradle" ] || [ -f "build.gradle.kts" ]; then
            echo "tool=gradle" >> "$GITHUB_OUTPUT"
          else
            echo "❌ No pom.xml or build.gradle(.kts) at repo root."
            exit 1
          fi

      # Maven path
      - name: Set up JDK 21 (Maven)
        if: steps.detect.outputs.tool == 'maven'
        uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '21', cache: maven }

      - name: Build (Maven)
        if: steps.detect.outputs.tool == 'maven'
        run: |
          mvn -B -ntp -Dstyle.color=always test
          mvn -B -ntp -Dstyle.color=always -DskipTests package

      # Gradle path (no wrapper needed)
      - name: Set up JDK 21 (Gradle)
        if: steps.detect.outputs.tool == 'gradle'
        uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '21' }

      - name: Set up Gradle 8.9 (cache disabled)
        if: steps.detect.outputs.tool == 'gradle'
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: '8.9'
          cache-disabled: true

      - name: Gradle task scan
        if: steps.detect.outputs.tool == 'gradle'
        id: g
        shell: bash
        run: |
          BIN="gradle"; [ -f "./gradlew" ] && chmod +x ./gradlew && BIN="./gradlew"
          echo "bin=$BIN" >> "$GITHUB_OUTPUT"
          $BIN --no-daemon --console=plain tasks --all > tasks.txt || true
          awk '/ - / {print $1}' tasks.txt | sort -u > tasks_only.txt || true
          for t in test integrationTest build assemble; do
            if grep -xq "$t" tasks_only.txt; then echo "has_$t=true" >> "$GITHUB_OUTPUT"; else echo "has_$t=false" >> "$GITHUB_OUTPUT"; fi
          done
          $BIN --version

      - name: Run unit tests
        if: steps.detect.outputs.tool == 'gradle' && steps.g.outputs.has_test == 'true'
        run: ${{ steps.g.outputs.bin }} --no-daemon --stacktrace --info test

      - name: Run integration tests
        if: steps.detect.outputs.tool == 'gradle' && steps.g.outputs.has_integrationTest == 'true'
        run: ${{ steps.g.outputs.bin }} --no-daemon --stacktrace --info integrationTest

      - name: Build or Assemble
        if: steps.detect.outputs.tool == 'gradle'
        shell: bash
        run: |
          BIN="${{ steps.g.outputs.bin }}"
          if [ "${{ steps.g.outputs.has_build }}" = "true" ]; then
            $BIN --no-daemon --stacktrace --info build
          elif [ "${{ steps.g.outputs.has_assemble }}" = "true" ]; then
            $BIN --no-daemon --stacktrace --info assemble
          else
            echo "❌ Neither 'build' nor 'assemble' exists"; exit 1
          fi

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/reports/tests/**
            **/build/test-results/**
            **/target/surefire-reports/**
            **/target/site/**
          if-no-files-found: ignore
