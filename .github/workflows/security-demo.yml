# This file demonstrates the Base64 security issue mentioned in PR #35
# SECURITY ISSUE: Base64 encoding is easily reversible and exposes the original tokens
# This workflow demonstrates how NOT to verify leaked tokens

name: Security Demo - Base64 Issue

on:
  push:
    branches: ["security-demo"]
  workflow_dispatch:

jobs:
  demonstrate_issue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # ❌ INSECURE: Base64 encoded patterns can be reverse-engineered
      - name: BAD EXAMPLE - Assert leaked tokens are purged
        run: |
          set -euo pipefail
          # These Base64 strings can be easily decoded to reveal the original tokens:
          # NVd4cDA1TjhKS003TVZDUjFXVzE= decodes to: 5Wxp05N8JKM7MVCR1WW1
          # dHVmVmtRdkk0Y3l4dmR0T2Q2MllOYTNR decodes to: tufVkQvI4cyxvdtOd62YNa3Q
          LEFT="$(echo NVd4cDA1TjhKS003TVZDUjFXVzE= | base64 -d)"
          RIGHT="$(echo dHVmVmtRdkk0Y3l4dmR0T2Q2MllOYTNR | base64 -d)"
          if git grep -n -E "${LEFT}|${RIGHT}" -- .; then
            echo "❌ Found a leaked token pattern. Purge it and re-run."
            exit 1
          fi
          echo "✅ No leaked token patterns found."